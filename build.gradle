plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// 추가 구성 정의
configurations {
    asciidoctorExt // Asciidoctor 확장 구성 정의
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.18.1'

    implementation 'io.github.oshai:kotlin-logging-jvm:7.0.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.springframework.security:spring-security-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// 확장 프로퍼티 정의: 스니펫 디렉토리 경로
ext {
    snippetsDir = file('build/generated-snippets')
}

// 테스트 태스크 설정: 스니펫 디렉토리 출력 디렉토리로 설정
test {
    outputs.dir snippetsDir
}

// Asciidoctor 설정: 스니펫 디렉토리 입력으로 설정 및 Asciidoctor 확장 구성 사용
asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test // 테스트가 먼저 실행되도록 설정
}

// Kotlin 컴파일러 옵션 설정: JSR-305에 대해 엄격한 처리 지정
kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

// 테스트 태스크에서 JUnit 플랫폼 사용 설정
tasks.named('test') {
    useJUnitPlatform()
}